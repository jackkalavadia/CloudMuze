{"ast":null,"code":"import { connect } from 'react-redux';\nimport PlayerQueue from './player_queue';\nimport { removeTrack, moveUp, moveDown, removeAllTracks } from '../../actions/player_queue_actions';\n\nconst mapStateToProps = state => ({\n  currentTrack: state.queue[0],\n  nextTrack: state.queue[1],\n  tracks: state.queue\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeTrack: trackId => dispatch(removeTrack(trackId)),\n  moveUp: track => dispatch(moveUp(track)),\n  moveDown: track => dispatch(moveDown(track)),\n  removeAll: () => dispatch(removeAllTracks())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerQueue);","map":{"version":3,"sources":["/Users/spartan/Downloads/sleepify/frontend/src/components/player/player_queue_container.js"],"names":["connect","PlayerQueue","removeTrack","moveUp","moveDown","removeAllTracks","mapStateToProps","state","currentTrack","queue","nextTrack","tracks","mapDispatchToProps","dispatch","trackId","track","removeAll"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SACIC,WADJ,EAEIC,MAFJ,EAGIC,QAHJ,EAIIC,eAJJ,QAKO,oCALP;;AAOA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,YAAY,EAAED,KAAK,CAACE,KAAN,CAAY,CAAZ,CADgB;AAE9BC,EAAAA,SAAS,EAAEH,KAAK,CAACE,KAAN,CAAY,CAAZ,CAFmB;AAG9BE,EAAAA,MAAM,EAAEJ,KAAK,CAACE;AAHgB,CAAL,CAA7B;;AAMA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpCX,EAAAA,WAAW,EAAEY,OAAO,IAAID,QAAQ,CAACX,WAAW,CAACY,OAAD,CAAZ,CADI;AAEpCX,EAAAA,MAAM,EAAEY,KAAK,IAAIF,QAAQ,CAACV,MAAM,CAACY,KAAD,CAAP,CAFW;AAGpCX,EAAAA,QAAQ,EAAEW,KAAK,IAAIF,QAAQ,CAACT,QAAQ,CAACW,KAAD,CAAT,CAHS;AAIpCC,EAAAA,SAAS,EAAE,MAAMH,QAAQ,CAACR,eAAe,EAAhB;AAJW,CAAL,CAAnC;;AAQA,eAAeL,OAAO,CAACM,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CX,WAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport PlayerQueue from './player_queue';\nimport { \n    removeTrack, \n    moveUp,\n    moveDown,\n    removeAllTracks,\n} from '../../actions/player_queue_actions'\n\nconst mapStateToProps = state => ({\n    currentTrack: state.queue[0],\n    nextTrack: state.queue[1],\n    tracks: state.queue,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    removeTrack: trackId => dispatch(removeTrack(trackId)),\n    moveUp: track => dispatch(moveUp(track)),\n    moveDown: track => dispatch(moveDown(track)),\n    removeAll: () => dispatch(removeAllTracks())\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerQueue);"]},"metadata":{},"sourceType":"module"}