{"ast":null,"code":"var _jsxFileName = \"/Users/spartan/Downloads/sleepify/frontend/src/components/session/login_form.js\";\nimport React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.demoLogin = this.demoLogin.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.changeBorder();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/');\n    }\n\n    this.setState({\n      errors: nextProps.errors\n    });\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.resetClasses();\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.login(user);\n  }\n\n  renderSignUp() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"render-signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Don't have an account?\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"SIGN UP FOR SLEEPIFY\")));\n  }\n\n  resetClasses() {\n    let element = document.getElementById('email');\n    let error = document.getElementById('email-error');\n\n    if (element) {\n      element.classList.remove(\"has-error\");\n      error.classList.remove(\"hidden\");\n    }\n\n    element = document.getElementById('password');\n    error = document.getElementById('password-error');\n\n    if (element) {\n      element.classList.remove(\"has-error\");\n      error.classList.remove(\"hidden\");\n    }\n  }\n\n  changeBorder(values = \"all\") {\n    if (values === \"all\") {\n      //change border of both input values\n      let element = document.getElementById('email');\n      let error = document.getElementById('email-error');\n\n      if (element) {\n        if (!error.classList.contains(\"hidden\") && !this.state.errors.login) {\n          element.classList.add(\"has-error\");\n        }\n      } //change border of password input box\n\n\n      element = document.getElementById('password');\n      error = document.getElementById('password-error');\n\n      if (element) {\n        if (!error.classList.contains(\"hidden\") && !this.state.errors.login) {\n          element.classList.add(\"has-error\");\n        }\n      }\n    } else {\n      //change border of email input box\n      let element = document.getElementById(values);\n      const errorId = values + \"-error\";\n      let error = document.getElementById(errorId);\n\n      if (element && error) {\n        element.classList.remove(\"has-error\");\n        error.classList.add(\"hidden\");\n      }\n    }\n  } //change border if something is in the input box\n\n\n  changeBorderonBlur(value) {\n    let element = document.getElementById(value);\n\n    if (element && !this.state[value]) {\n      const errorId = value + \"-error\";\n      let error = document.getElementById(errorId);\n      error.classList.remove(\"hidden\");\n      element.classList.add(\"has-error\");\n    } else if (element && this.state[value]) {\n      const errorId = value + \"-error\";\n      let error = document.getElementById(errorId);\n      error.classList.add(\"hidden\");\n      element.classList.remove(\"has-error\");\n    }\n  }\n\n  renderMismatchError() {\n    if (this.state.errors.login) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-form-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, this.state.errors.login);\n    } else {\n      return null;\n    }\n  }\n\n  demoLogin(e) {\n    e.preventDefault();\n    return this.typeWriter('demouser@demouser.com', 'demouser');\n  }\n\n  typeWriter(email, password) {\n    let i = 0;\n    let j = 0;\n    let speed = 50;\n    let emailInput = document.getElementById(\"email\");\n    let pwInput = document.getElementById(\"password\");\n    emailInput.value = \"\";\n    pwInput.value = \"\";\n\n    const login = () => {\n      if (i < email.length) {\n        emailInput.value += email.charAt(i);\n        i++;\n        setTimeout(login, speed);\n      } else if (j < password.length) {\n        pwInput.value += password.charAt(j);\n        j++;\n        setTimeout(login, speed);\n      } else {\n        this.setState({\n          email: email,\n          password: password\n        });\n        this.resetClasses();\n        this.props.login(this.state);\n      }\n    };\n\n    return login();\n  } // demoLogin(e) {\n  //   e.preventDefault();\n  //   let user = {\n  //     email: \"demouser@demouser.com\",\n  //     password: \"demouser\"\n  //   }\n  //   this.setState(user, () => this.props.login(user));\n  //   // this.props.login(user);\n  // }\n\n\n  render() {\n    this.changeBorder();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, \"Rock-N-Roll\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-error-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, this.renderMismatchError()), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email\",\n      className: \"form-email login\",\n      type: \"text\",\n      value: this.state.email,\n      onChange: this.update('email'),\n      placeholder: \"Email address or username\",\n      onFocus: () => this.changeBorder('email'),\n      onBlur: () => this.changeBorderonBlur('email'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"email-error\",\n      className: \"login error-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, this.state.errors.email)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"password\",\n      className: \"form-password login\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.update('password'),\n      placeholder: \"Password\",\n      onFocus: () => this.changeBorder('password'),\n      onBlur: () => this.changeBorderonBlur('password'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"password-error\",\n      className: \"login error-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, this.state.errors.password)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"LOG IN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"demo-login\",\n      onClick: this.demoLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, \"DEMO\")))), this.renderSignUp(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"disclaimer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, \"By Signing in, you agree to Sleepify's Terms & Conditions and Privacy Policy\")));\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/spartan/Downloads/sleepify/frontend/src/components/session/login_form.js"],"names":["React","withRouter","Link","LoginForm","Component","constructor","props","state","email","password","errors","handleSubmit","bind","demoLogin","componentDidUpdate","changeBorder","componentWillReceiveProps","nextProps","currentUser","history","push","setState","update","field","e","currentTarget","value","preventDefault","resetClasses","user","login","renderSignUp","element","document","getElementById","error","classList","remove","values","contains","add","errorId","changeBorderonBlur","renderMismatchError","typeWriter","i","j","speed","emailInput","pwInput","length","charAt","setTimeout","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.demoLogin = this.demoLogin.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.changeBorder();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/');\n    }\n\n    this.setState({errors: nextProps.errors})\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.resetClasses();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.login(user); \n  }\n\n  renderSignUp() {\n    return (\n      <div className='render-signup'>\n        <span>\n          Don't have an account?\n        </span>\n        <div>\n          <Link to='/signup' >SIGN UP FOR SLEEPIFY</Link>\n        </div>\n      </div>\n    )\n  }\n\n  resetClasses() {\n    let element = document.getElementById('email');\n    let error = document.getElementById('email-error')\n    if(element) {\n      element.classList.remove(\"has-error\")\n      error.classList.remove(\"hidden\")\n    }\n    element = document.getElementById('password');\n    error = document.getElementById('password-error')\n    if (element) {\n      element.classList.remove(\"has-error\")\n      error.classList.remove(\"hidden\")\n    }\n  }\n\n\n  changeBorder(values = \"all\") {\n    if(values === \"all\") {\n      //change border of both input values\n      let element = document.getElementById('email');\n      let error = document.getElementById('email-error')\n      if(element) {\n        if (!error.classList.contains(\"hidden\") && (!this.state.errors.login)){\n          element.classList.add(\"has-error\")\n        }\n      }\n      //change border of password input box\n      element = document.getElementById('password');\n      error = document.getElementById('password-error')\n      if (element) {\n        if (!error.classList.contains(\"hidden\") && (!this.state.errors.login)){\n          element.classList.add(\"has-error\")\n        }\n      }\n    } else {\n      //change border of email input box\n      let element = document.getElementById(values);\n      const errorId = values + \"-error\"\n      let error = document.getElementById(errorId)\n      if(element && error) {\n        element.classList.remove(\"has-error\")\n        error.classList.add(\"hidden\")\n      }\n    }\n  }\n\n  //change border if something is in the input box\n  changeBorderonBlur(value) {\n    let element = document.getElementById(value);\n    if(element && !this.state[value]) {\n      const errorId = value + \"-error\"\n      let error = document.getElementById(errorId)\n      error.classList.remove(\"hidden\")\n      element.classList.add(\"has-error\")\n    } else if (element && this.state[value]){\n      const errorId = value + \"-error\"\n      let error = document.getElementById(errorId)\n      error.classList.add(\"hidden\")\n      element.classList.remove(\"has-error\")\n    }\n  }\n  \n  renderMismatchError() {\n    if(this.state.errors.login) {\n      return (\n        <div className='login-form-error'>\n          {this.state.errors.login}\n        </div>\n      )\n    } else {\n      return (null)\n    }\n  }\n\n  demoLogin(e) {\n    e.preventDefault();\n    return this.typeWriter('demouser@demouser.com', 'demouser');\n  }       \n\n  typeWriter(email, password) {\n      let i = 0;\n      let j = 0;\n      let speed = 50; \n      let emailInput = document.getElementById(\"email\")\n      let pwInput = document.getElementById(\"password\");\n      emailInput.value = \"\";\n      pwInput.value = \"\";\n      const login = () => {\n          if (i < email.length) {\n              emailInput.value += email.charAt(i);\n              i++;\n              setTimeout(login, speed);\n          } else if (j < password.length) {\n              pwInput.value += password.charAt(j);\n              j++;\n              setTimeout(login, speed)\n          } else {\n              this.setState({email: email, password: password});\n              this.resetClasses();\n              this.props.login(this.state);\n          }\n\n      }\n      return login()\n  }\n\n  // demoLogin(e) {\n  //   e.preventDefault();\n    \n  //   let user = {\n  //     email: \"demouser@demouser.com\",\n  //     password: \"demouser\"\n  //   }\n  //   this.setState(user, () => this.props.login(user));\n\n  //   // this.props.login(user);\n    \n  // }\n\n  render() {\n    this.changeBorder();\n    return (\n      <div className='login-form-container'>\n        <div className='heading'>\n         Rock-N-Roll\n        </div>\n        <div className='login-form-error-container'>\n          {this.renderMismatchError()}\n        </div>\n        <form onSubmit={this.handleSubmit}>\n          <div className='login-form'>\n            <br/>\n              <div className='email-input'>\n                <input id=\"email\"\n                  className=\"form-email login\"\n                  type=\"text\"\n                  value={this.state.email}\n                  onChange={this.update('email')}\n                  placeholder=\"Email address or username\"\n                  onFocus={() => this.changeBorder('email')}\n                  onBlur={()=>this.changeBorderonBlur('email')}\n                />\n                <div id=\"email-error\" className='login error-div'>\n                  {this.state.errors.email}\n                </div>\n              </div>\n            <br/>\n              <div className='password-input'>\n                <input id=\"password\" \n                  className=\"form-password login\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.update('password')}\n                  placeholder=\"Password\"\n                  onFocus={() => this.changeBorder('password')}\n                  onBlur={()=>this.changeBorderonBlur('password')}\n                />\n                <div id=\"password-error\" className='login error-div'>\n                  {this.state.errors.password}\n                </div>\n              </div>\n            <br/>\n            <div className='submit-button'>\n              <input type=\"submit\" value=\"LOG IN\" />\n              <button className='demo-login' onClick={this.demoLogin}>DEMO</button>\n            </div>\n          </div>\n        </form>\n        {this.renderSignUp()}\n        <div className='disclaimer'>\n          <p>By Signing in, you agree to Sleepify's Terms &amp; Conditions and Privacy Policy</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}