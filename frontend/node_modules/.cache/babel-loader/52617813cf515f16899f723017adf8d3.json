{"ast":null,"code":"import { RECEIVE_PLAYLIST, RECEIVE_USER_PLAYLISTS, SHOW_PLAYLIST, DELETE_PLAYLIST, RENAME_PLAYLIST } from \"../actions/playlist_actions\";\n\nconst playlistReducer = (oldState = {}, action) => {\n  console.log(action.type);\n  Object.freeze(oldState);\n\n  switch (action.type) {\n    case RECEIVE_PLAYLIST:\n      return Object.assign({}, oldState, {\n        [action.playlist.data.playlist._id]: action.playlist.data.playlist\n      });\n\n    case RECEIVE_USER_PLAYLISTS:\n      return action.playlists.data;\n\n    case SHOW_PLAYLIST:\n      return Object.assign({}, oldState, {\n        current: action.playlist.data\n      });\n\n    case RENAME_PLAYLIST:\n      const nextState = Object.assign({}, oldState); // debugger\n\n      nextState[action.playlist.data._id] = action.playlist.data;\n      return nextState;\n\n    case DELETE_PLAYLIST:\n      const newState = Object.assign({}, oldState);\n      delete newState[action.playlist._id];\n      return newState;\n\n    default:\n      return oldState;\n  }\n};\n\nexport default playlistReducer;","map":{"version":3,"sources":["/Users/spartan/Downloads/sleepify/frontend/src/reducers/playlist_reducer.js"],"names":["RECEIVE_PLAYLIST","RECEIVE_USER_PLAYLISTS","SHOW_PLAYLIST","DELETE_PLAYLIST","RENAME_PLAYLIST","playlistReducer","oldState","action","console","log","type","Object","freeze","assign","playlist","data","_id","playlists","current","nextState","newState"],"mappings":"AAAA,SACEA,gBADF,EAEEC,sBAFF,EAGEC,aAHF,EAIEC,eAJF,EAKEC,eALF,QAMO,6BANP;;AAQA,MAAMC,eAAe,GAAG,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,MAAhB,KAA2B;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcN,QAAd;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAKV,gBAAL;AACE,aAAOW,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBP,QAAlB,EAA4B;AACjC,SAACC,MAAM,CAACO,QAAP,CAAgBC,IAAhB,CAAqBD,QAArB,CAA8BE,GAA/B,GAAqCT,MAAM,CAACO,QAAP,CAAgBC,IAAhB,CAAqBD;AADzB,OAA5B,CAAP;;AAGF,SAAKb,sBAAL;AACE,aAAOM,MAAM,CAACU,SAAP,CAAiBF,IAAxB;;AACF,SAAKb,aAAL;AACE,aAAOS,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBP,QAAlB,EAA4B;AAAEY,QAAAA,OAAO,EAAEX,MAAM,CAACO,QAAP,CAAgBC;AAA3B,OAA5B,CAAP;;AACF,SAAKX,eAAL;AACE,YAAMe,SAAS,GAAGR,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBP,QAAlB,CAAlB,CADF,CAEE;;AACAa,MAAAA,SAAS,CAACZ,MAAM,CAACO,QAAP,CAAgBC,IAAhB,CAAqBC,GAAtB,CAAT,GAAsCT,MAAM,CAACO,QAAP,CAAgBC,IAAtD;AACA,aAAOI,SAAP;;AACF,SAAKhB,eAAL;AACE,YAAMiB,QAAQ,GAAGT,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBP,QAAlB,CAAjB;AACA,aAAOc,QAAQ,CAACb,MAAM,CAACO,QAAP,CAAgBE,GAAjB,CAAf;AACA,aAAOI,QAAP;;AACF;AACE,aAAOd,QAAP;AAnBJ;AAqBD,CAxBD;;AA0BA,eAAeD,eAAf","sourcesContent":["import {\n  RECEIVE_PLAYLIST,\n  RECEIVE_USER_PLAYLISTS,\n  SHOW_PLAYLIST,\n  DELETE_PLAYLIST,\n  RENAME_PLAYLIST\n} from \"../actions/playlist_actions\";\n\nconst playlistReducer = (oldState = {}, action) => {\n  console.log(action.type)\n  Object.freeze(oldState);\n  switch (action.type) {\n    case RECEIVE_PLAYLIST:\n      return Object.assign({}, oldState, {\n        [action.playlist.data.playlist._id]: action.playlist.data.playlist\n      });\n    case RECEIVE_USER_PLAYLISTS:\n      return action.playlists.data;\n    case SHOW_PLAYLIST:\n      return Object.assign({}, oldState, { current: action.playlist.data })\n    case RENAME_PLAYLIST:\n      const nextState = Object.assign({}, oldState)\n      // debugger\n      nextState[action.playlist.data._id] = action.playlist.data\n      return nextState\n    case DELETE_PLAYLIST:\n      const newState = Object.assign({}, oldState)\n      delete newState[action.playlist._id]\n      return newState\n    default:\n      return oldState;\n  }\n};\n\nexport default playlistReducer;\n"]},"metadata":{},"sourceType":"module"}