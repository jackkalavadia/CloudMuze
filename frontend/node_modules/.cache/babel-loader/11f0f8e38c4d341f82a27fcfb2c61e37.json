{"ast":null,"code":"var _jsxFileName = \"/Users/spartan/Downloads/sleepify/frontend/src/components/show/playlist_show.js\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\n\nclass PlaylistShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showSongs = this.showSongs.bind(this);\n    this.playAll = this.playAll.bind(this);\n    this.playTrack = this.playTrack.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchPlaylist(this.props.match.params.id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.props.fetchPlaylist(this.props.match.params.id);\n    }\n  }\n\n  playAll(e) {\n    e.preventDefault();\n    this.props.playAllTracks(this.props.playlist.songs);\n  }\n\n  playTrack(track) {\n    return e => {\n      e.stopPropagation();\n      this.props.playTrack(track);\n    };\n  }\n\n  showSongs() {\n    if (!this.props.playlist) return null;\n    const songs = Object.values(this.props.playlist.songs);\n    if (songs.length === 0) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ps-empty-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-bed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"No Songs\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Let's find some nice songs to relax to\"));\n    return songs.map((song, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        className: `pq-track-container`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        onClick: this.playTrack(song),\n        className: \"fas fa-bed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pq-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pq-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, song.title), /*#__PURE__*/React.createElement(Link, {\n        to: `/open/artist/${song.artist._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pq-artist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 58\n        }\n      }, song.artist.name))));\n    });\n  }\n\n  render() {\n    const {\n      playlist,\n      username\n    } = this.props;\n    if (!playlist) return null;\n    const hasSong = playlist.songs.length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"open-player-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ps-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ps-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"ps-image\",\n      src: hasSong ? playlist.songs[0].imageUrl : \"/static/images/playlist.png\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, playlist.title), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, username), hasSong ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.playAll,\n      className: \"album-show-play\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 24\n      }\n    }, \"PLAY\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"playlist-show-play disabled\",\n      id: \"disabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, \"PLAY\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ps-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, this.showSongs())));\n  }\n\n}\n\nexport default PlaylistShow;","map":{"version":3,"sources":["/Users/spartan/Downloads/sleepify/frontend/src/components/show/playlist_show.js"],"names":["React","Link","PlaylistShow","Component","constructor","props","showSongs","bind","playAll","playTrack","componentDidMount","fetchPlaylist","match","params","id","componentDidUpdate","prevProps","e","preventDefault","playAllTracks","playlist","songs","track","stopPropagation","Object","values","length","map","song","i","title","artist","_id","name","render","username","hasSong","imageUrl"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nclass PlaylistShow extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.showSongs = this.showSongs.bind(this);\n    this.playAll = this.playAll.bind(this);\n    this.playTrack = this.playTrack.bind(this);\n  }\n\n\n  componentDidMount() {\n    this.props.fetchPlaylist(this.props.match.params.id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.props.fetchPlaylist(this.props.match.params.id);\n    }\n  }\n\n\n  playAll(e) {\n    e.preventDefault();\n    this.props.playAllTracks(this.props.playlist.songs);\n  }\n\n  playTrack(track) {\n    return e => {\n      e.stopPropagation();\n      this.props.playTrack(track);\n    }\n  }\n\n  showSongs() {\n    if (!this.props.playlist) return (null);\n    const songs = Object.values(this.props.playlist.songs);\n    if (songs.length === 0) return (\n      <div\n        className=\"ps-empty-container\">\n        <i className=\"fas fa-bed\"></i>\n          <h1>No Songs</h1>\n          <h3>Let's find some nice songs to relax to</h3>\n          {/* <Link to=\"/open/search\"><div className=\"ps-search\">Search Songs</div></Link> */}\n      </div>\n    )\n    return songs.map((song, i) => {\n      return (\n        <div\n          key={i}\n          className={`pq-track-container`}>\n          <i onClick={this.playTrack(song)} className=\"fas fa-bed\"></i>\n          <div className=\"pq-details\">\n            <span className=\"pq-title\">\n              {song.title}\n            </span>\n            <Link to={`/open/artist/${song.artist._id}`}><span className=\"pq-artist\">\n              {song.artist.name}\n            </span></Link>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    const { playlist, username } = this.props;\n    if (!playlist) return null;\n    const hasSong = playlist.songs.length;\n    return (\n      <div className=\"open-player-body\">\n        <div className=\"ps-container\">\n          <div className=\"ps-left\">\n            <img className=\"ps-image\" src={hasSong ? playlist.songs[0].imageUrl : \"/static/images/playlist.png\"} alt=\"\"/>\n            <h1>{playlist.title}</h1>\n            <h2>{username}</h2>\n            {hasSong ? <button\n              onClick={this.playAll}\n              className=\"album-show-play\">\n                PLAY\n            </button> : <button className=\"playlist-show-play disabled\" id=\"disabled\">PLAY</button> }\n          </div>\n\n          <div className=\"ps-right\">\n              {this.showSongs()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlaylistShow;\n"]},"metadata":{},"sourceType":"module"}