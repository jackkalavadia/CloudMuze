{"ast":null,"code":"var _jsxFileName = \"/Users/spartan/Downloads/sleepify/frontend/src/components/sidebar/playlist/playlist.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderPlaylists = this.renderPlaylists.bind(this);\n    this.closeOptions = this.closeOptions.bind(this);\n    this.renderOptions = this.renderOptions.bind(this);\n    this.renamePlaylist = this.renamePlaylist.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.deletePlaylist = this.deletePlaylist.bind(this);\n    this.toggleRenamePopUp = this.toggleRenamePopUp.bind(this);\n    this.state = {\n      title: \"\",\n      showDropDown: false,\n      showRename: false,\n      mouseCoordsleft: 0,\n      mouseCoordsTop: 0,\n      renameCoordsLeft: 0,\n      renameCoordsTop: 0,\n      currentTargetPlaylistId: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.currentUserId) {\n      this.props.fetchUserPlaylists(this.props.currentUserId);\n    }\n\n    document.addEventListener('mousedown', this.handleClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick, false);\n  }\n\n  handleClick(e) {\n    const domNode = ReactDOM.findDOMNode(this);\n\n    if (!domNode || !domNode.contains(e.target)) {\n      this.setState({\n        showDropDown: false\n      });\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      const data = {\n        playlistId: this.state.currentTargetPlaylistId,\n        title: this.state.title\n      };\n      this.props.renamePlaylist(data);\n      this.setState({\n        showRename: false\n      });\n    }\n  }\n\n  closeOptions() {\n    this.setState({\n      showDropDown: false\n    });\n  }\n\n  renderOptions(e) {\n    e.preventDefault();\n\n    if (e.target.dataset.playlistid) {\n      this.setState({\n        targetedPlaylistContainer: e.target,\n        showRename: false,\n        showDropDown: !this.state.showDropDown,\n        mouseCoordsLeft: e.clientX,\n        mouseCoordsTop: e.clientY,\n        currentTargetPlaylistId: e.target.dataset.playlistid\n      });\n    }\n  }\n\n  renamePlaylist() {\n    return e => {\n      let currentTargetRect = this.state.targetedPlaylistContainer.getBoundingClientRect();\n      const e_offsetX = currentTargetRect.x,\n            e_offsetY = currentTargetRect.y - 5;\n      this.setState({\n        showRename: !this.state.showRename,\n        showDropDown: false,\n        renameCoordsLeft: e_offsetX,\n        renameCoordsTop: e_offsetY\n      }, () => this.setFocus());\n    };\n  }\n\n  deletePlaylist(playlistId) {\n    const data = {\n      playlistId: playlistId,\n      userId: this.props.currentUserId\n    };\n    return () => {\n      this.props.removePlaylist(data);\n      this.setState({\n        showRename: false,\n        showDropDown: !this.state.showDropDown\n      });\n    };\n  }\n\n  toggleRenamePopUp() {\n    this.setState({\n      showRename: false\n    });\n  }\n\n  setFocus() {\n    let input = document.getElementById(\"playlist-rename-input-field\");\n    input.focus();\n  }\n\n  renderPlaylists() {\n    if (this.props.playlists) {\n      let playlists = Object.assign({}, this.props.playlists);\n      if (playlists['current']) delete playlists['current'];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"playlists-items-container\",\n        onContextMenu: this.renderOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, this.state.showDropDown && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"playlist-options-popup\",\n        style: {\n          left: this.state.mouseCoordsLeft,\n          top: this.state.mouseCoordsTop\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"option-choice\",\n        onClick: this.renamePlaylist(this.state.currentTargetPlaylistId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, \"Rename Playlist \"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"option-choice\",\n        onClick: this.deletePlaylist(this.state.currentTargetPlaylistId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, \"Delete Playlist\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"option-choice\",\n        onClick: this.closeOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, \"Cancel\")), Object.values(playlists).map((playlist, i) => /*#__PURE__*/React.createElement(Link, {\n        to: `/open/playlist/${playlist._id}`,\n        className: \"playlists-item-container\",\n        key: playlist._id,\n        \"data-playlistid\": playlist._id,\n        onContextMenu: this.renderOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }, playlist.title)), this.state.showRename && /*#__PURE__*/React.createElement(\"input\", {\n        id: \"playlist-rename-input-field\",\n        className: \"playlist-rename-input-field\",\n        type: \"text\",\n        name: \"playlist-name\",\n        onChange: this.update(\"title\"),\n        placeholder: \"New Playlist Name\",\n        style: {\n          left: this.state.renameCoordsLeft,\n          top: this.state.renameCoordsTop\n        },\n        onContextMenu: this.toggleRenamePopUp,\n        onKeyDown: this.handleKeyDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 37\n        }\n      }));\n    }\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, \"Playlists\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navBar-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navBar-link\",\n      onClick: () => this.props.openModal(\"createPlaylist\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-plus-square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }), \"Create Playlist\")), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }), this.renderPlaylists());\n  }\n\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/spartan/Downloads/sleepify/frontend/src/components/sidebar/playlist/playlist.js"],"names":["React","Link","ReactDOM","Playlist","Component","constructor","props","renderPlaylists","bind","closeOptions","renderOptions","renamePlaylist","handleKeyDown","deletePlaylist","toggleRenamePopUp","state","title","showDropDown","showRename","mouseCoordsleft","mouseCoordsTop","renameCoordsLeft","renameCoordsTop","currentTargetPlaylistId","handleClick","componentDidMount","currentUserId","fetchUserPlaylists","document","addEventListener","componentWillUnmount","removeEventListener","e","domNode","findDOMNode","contains","target","setState","key","data","playlistId","preventDefault","dataset","playlistid","targetedPlaylistContainer","mouseCoordsLeft","clientX","clientY","currentTargetRect","getBoundingClientRect","e_offsetX","x","e_offsetY","y","setFocus","userId","removePlaylist","input","getElementById","focus","playlists","Object","assign","left","top","values","map","playlist","i","_id","update","field","currentTarget","value","render","openModal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderPlaylists = this.renderPlaylists.bind(this);\n    this.closeOptions = this.closeOptions.bind(this)\n    this.renderOptions = this.renderOptions.bind(this)\n    this.renamePlaylist = this.renamePlaylist.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.deletePlaylist = this.deletePlaylist.bind(this)\n    this.toggleRenamePopUp = this.toggleRenamePopUp.bind(this)\n    this.state = {\n      title: \"\",\n      showDropDown: false,\n      showRename: false,\n      mouseCoordsleft: 0,\n      mouseCoordsTop: 0,\n      renameCoordsLeft: 0,\n      renameCoordsTop: 0,\n      currentTargetPlaylistId: null,\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.currentUserId) {\n      this.props.fetchUserPlaylists(this.props.currentUserId);\n    }\n    document.addEventListener('mousedown', this.handleClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick, false);\n  }\n\n  handleClick(e) {\n    const domNode = ReactDOM.findDOMNode(this);\n\n    if (!domNode || !domNode.contains(e.target)) {\n      this.setState({\n        showDropDown: false\n      });\n    }\n  }\n\n  handleKeyDown(e){\n    if (e.key === 'Enter') {\n      const data = {\n        playlistId: this.state.currentTargetPlaylistId,\n        title: this.state.title\n      }\n      this.props.renamePlaylist(data)\n      this.setState({ showRename: false })\n    }\n  }\n\n\n\n  closeOptions() {\n    this.setState({showDropDown: false})\n  }\n\n  renderOptions(e) {\n    e.preventDefault()\n\n    if (e.target.dataset.playlistid) {\n      this.setState({\n        targetedPlaylistContainer: e.target,\n        showRename: false,\n        showDropDown: !this.state.showDropDown,\n        mouseCoordsLeft: e.clientX,\n        mouseCoordsTop: e.clientY,\n        currentTargetPlaylistId: e.target.dataset.playlistid\n      })\n    }\n  }\n\n\n  renamePlaylist() {\n    return (e) => {\n      let currentTargetRect = this.state.targetedPlaylistContainer.getBoundingClientRect();\n      const e_offsetX = currentTargetRect.x,\n        e_offsetY = currentTargetRect.y - 5;\n      this.setState({\n        showRename: !this.state.showRename,\n        showDropDown: false,\n        renameCoordsLeft: e_offsetX,\n        renameCoordsTop: e_offsetY,\n      }, () => this.setFocus())\n      \n    }\n  }\n\n  deletePlaylist(playlistId) {\n    const data = {\n      playlistId: playlistId,\n      userId: this.props.currentUserId\n    }\n    return () => {\n      this.props.removePlaylist(data)\n      this.setState({\n        showRename: false,\n        showDropDown: !this.state.showDropDown\n      })\n    }\n  }\n\n  toggleRenamePopUp() {\n    this.setState({showRename: false})\n  }\n  \n  setFocus() {\n    let input = document.getElementById(\"playlist-rename-input-field\");\n    input.focus();\n  }\n\n\n  renderPlaylists() {\n    if (this.props.playlists) {\n      let playlists = Object.assign({}, this.props.playlists);\n      if (playlists['current']) delete playlists['current'];\n      return (\n        <div id=\"playlists-items-container\" onContextMenu={this.renderOptions}>\n          {this.state.showDropDown && <div className=\"playlist-options-popup\" style={{ left: this.state.mouseCoordsLeft, top: this.state.mouseCoordsTop }}>\n            <p className=\"option-choice\" onClick={this.renamePlaylist(this.state.currentTargetPlaylistId)}>Rename Playlist </p>\n            <p className=\"option-choice\" onClick={this.deletePlaylist(this.state.currentTargetPlaylistId)}>Delete Playlist</p>\n            <p className=\"option-choice\" onClick={this.closeOptions}>Cancel</p>\n          </div>}\n          {\n            Object.values(playlists).map((playlist, i) => (\n              <Link\n                to={`/open/playlist/${playlist._id}`}\n                className=\"playlists-item-container\"\n                key={playlist._id}\n                data-playlistid={playlist._id}\n                onContextMenu={this.renderOptions}\n              >\n                {playlist.title}\n              </Link>\n            ))\n          }\n          {this.state.showRename && <input\n            id=\"playlist-rename-input-field\"\n            className=\"playlist-rename-input-field\"\n            type=\"text\"\n            name=\"playlist-name\"\n            onChange={this.update(\"title\")}\n            placeholder=\"New Playlist Name\"\n            style={{ left: this.state.renameCoordsLeft, top: this.state.renameCoordsTop }}\n            onContextMenu={this.toggleRenamePopUp}\n            onKeyDown={this.handleKeyDown}\n          ></input>\n          }\n          \n          \n        </div >\n      );\n    }\n  }\n\n  update(field) {\n    return e =>\n      this.setState({\n        [field]: e.currentTarget.value\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"playlist-container\">\n        <h4>Playlists</h4>\n        <div className=\"navBar-item\">\n          <div\n            className=\"navBar-link\"\n            onClick={() => this.props.openModal(\"createPlaylist\")}\n          >\n            <i class=\"fas fa-plus-square\"></i>\n            {/* <img className=\"plus-icon\" src={plusIcon} alt=\"\"></img> */}\n            Create Playlist\n          </div>\n        </div>\n        <hr className=\"divider\"></hr>\n        {this.renderPlaylists()}\n      </div>\n    );\n  }\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}