{"ast":null,"code":"import * as SongApiUtil from \"../util/song_util\";\nexport const RECEIVE_SONG = \"RECEIVE_SONG\";\nexport const RECEIVE_SONGS = \"RECEIVE_SONGS\";\nexport const TOGGLE_SONG_LIKE = \"TOGGLE_SONG_LIKE\";\nexport const CHANGE_MULTIPLE_SONG_LIKES = \"CHANGE_MULTIPLE_SONG_LIKES\";\n\nconst receiveSong = song => {\n  return {\n    type: RECEIVE_SONG,\n    song\n  };\n};\n\nconst receiveSongs = songs => {\n  return {\n    type: RECEIVE_SONGS,\n    songs\n  };\n};\n\nconst changeLike = likeData => {\n  return {\n    type: TOGGLE_SONG_LIKE,\n    likeData\n  };\n}; // const changeMultipleLikes = (likeData) => {\n//   return ({\n//     type: CHANGE_MULTIPLE_SONG_LIKES,\n//     likeData\n//   })\n// }\n\n\nexport const fetchSong = id => dispatch => {\n  return SongApiUtil.fetchSong(id).then(song => {\n    dispatch(receiveSong(song));\n  });\n};\nexport const fetchSongs = () => dispatch => {\n  return SongApiUtil.fetchSongs().then(songs => {\n    dispatch(receiveSongs(songs));\n  });\n};\nexport const fetchUserLiked = userId => dispatch => {\n  return SongApiUtil.fetchUserLiked(userId).then(songs => {\n    dispatch(receiveSongs(songs));\n  });\n};\nexport const fetchSongsByGenre = genre => dispatch => {\n  return SongApiUtil.fetchSongsByGenre(genre).then(songs => {\n    dispatch(receiveSongs(songs));\n  });\n};\nexport const searchSongs = search => dispatch => {\n  return SongApiUtil.searchSongs(search).then(songs => {\n    dispatch(receiveSongs(songs));\n  });\n};\nexport const toggleLike = likeData => dispatch => {\n  return SongApiUtil.toggleLike(likeData).then(likeData => {\n    dispatch(changeLike(likeData));\n  });\n}; // export const toggleMultipleLikes = likeData => dispatch => {\n//   return SongApiUtil.toggleMultipleLikes(likeData).then((likeData) => {dispatch(changeMultipleLikes(likeData))})\n// }","map":{"version":3,"sources":["/Users/spartan/Downloads/sleepify/frontend/src/actions/song_actions.js"],"names":["SongApiUtil","RECEIVE_SONG","RECEIVE_SONGS","TOGGLE_SONG_LIKE","CHANGE_MULTIPLE_SONG_LIKES","receiveSong","song","type","receiveSongs","songs","changeLike","likeData","fetchSong","id","dispatch","then","fetchSongs","fetchUserLiked","userId","fetchSongsByGenre","genre","searchSongs","search","toggleLike"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;;AAEP,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5B,SAAO;AACLC,IAAAA,IAAI,EAAEN,YADD;AAELK,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAME,YAAY,GAAIC,KAAD,IAAW;AAC9B,SAAQ;AACNF,IAAAA,IAAI,EAAEL,aADA;AAENO,IAAAA;AAFM,GAAR;AAID,CALD;;AAOA,MAAMC,UAAU,GAAIC,QAAD,IAAc;AAC/B,SAAQ;AACNJ,IAAAA,IAAI,EAAEJ,gBADA;AAENQ,IAAAA;AAFM,GAAR;AAID,CALD,C,CAOA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,SAAS,GAAGC,EAAE,IAAIC,QAAQ,IAAI;AACzC,SAAOd,WAAW,CAACY,SAAZ,CAAsBC,EAAtB,EACJE,IADI,CACCT,IAAI,IAAI;AAAEQ,IAAAA,QAAQ,CAACT,WAAW,CAACC,IAAD,CAAZ,CAAR;AAA6B,GADxC,CAAP;AAED,CAHM;AAKP,OAAO,MAAMU,UAAU,GAAG,MAAOF,QAAD,IAAc;AAC5C,SAAOd,WAAW,CAACgB,UAAZ,GACJD,IADI,CACEN,KAAD,IAAW;AAAEK,IAAAA,QAAQ,CAACN,YAAY,CAACC,KAAD,CAAb,CAAR;AAA+B,GAD7C,CAAP;AAED,CAHM;AAKP,OAAO,MAAMQ,cAAc,GAAIC,MAAD,IAAaJ,QAAD,IAAc;AACtD,SAAOd,WAAW,CAACiB,cAAZ,CAA2BC,MAA3B,EACJH,IADI,CACEN,KAAD,IAAW;AAAEK,IAAAA,QAAQ,CAACN,YAAY,CAACC,KAAD,CAAb,CAAR;AAA+B,GAD7C,CAAP;AAED,CAHM;AAKP,OAAO,MAAMU,iBAAiB,GAAIC,KAAD,IAAYN,QAAD,IAAc;AACxD,SAAOd,WAAW,CAACmB,iBAAZ,CAA8BC,KAA9B,EACJL,IADI,CACEN,KAAD,IAAW;AAAEK,IAAAA,QAAQ,CAACN,YAAY,CAACC,KAAD,CAAb,CAAR;AAA+B,GAD7C,CAAP;AAED,CAHM;AAKP,OAAO,MAAMY,WAAW,GAAIC,MAAD,IAAaR,QAAD,IAAc;AACnD,SAAOd,WAAW,CAACqB,WAAZ,CAAwBC,MAAxB,EACJP,IADI,CACEN,KAAD,IAAW;AAAEK,IAAAA,QAAQ,CAACN,YAAY,CAACC,KAAD,CAAb,CAAR;AAA+B,GAD7C,CAAP;AAED,CAHM;AAKP,OAAO,MAAMc,UAAU,GAAGZ,QAAQ,IAAIG,QAAQ,IAAI;AAChD,SAAOd,WAAW,CAACuB,UAAZ,CAAuBZ,QAAvB,EAAiCI,IAAjC,CAAuCJ,QAAD,IAAc;AAAEG,IAAAA,QAAQ,CAACJ,UAAU,CAACC,QAAD,CAAX,CAAR;AAA+B,GAArF,CAAP;AACD,CAFM,C,CAIP;AACA;AACA","sourcesContent":["import * as SongApiUtil from \"../util/song_util\";\nexport const RECEIVE_SONG = \"RECEIVE_SONG\";\nexport const RECEIVE_SONGS = \"RECEIVE_SONGS\";\n\nexport const TOGGLE_SONG_LIKE = \"TOGGLE_SONG_LIKE\";\nexport const CHANGE_MULTIPLE_SONG_LIKES = \"CHANGE_MULTIPLE_SONG_LIKES\"\n\nconst receiveSong = (song) => {\n  return {\n    type: RECEIVE_SONG,\n    song\n  };\n};\n\nconst receiveSongs = (songs) => {\n  return ({\n    type: RECEIVE_SONGS,\n    songs,\n  })\n};\n\nconst changeLike = (likeData) => {\n  return ({\n    type: TOGGLE_SONG_LIKE,\n    likeData\n  })\n}\n\n// const changeMultipleLikes = (likeData) => {\n//   return ({\n//     type: CHANGE_MULTIPLE_SONG_LIKES,\n//     likeData\n//   })\n// }\n\nexport const fetchSong = id => dispatch => {\n  return SongApiUtil.fetchSong(id)\n    .then(song => { dispatch(receiveSong(song)) })\n};\n\nexport const fetchSongs = () => (dispatch) => {\n  return SongApiUtil.fetchSongs()\n    .then((songs) => { dispatch(receiveSongs(songs)) })\n};\n\nexport const fetchUserLiked = (userId) => (dispatch) => {\n  return SongApiUtil.fetchUserLiked(userId)\n    .then((songs) => { dispatch(receiveSongs(songs)) })\n};\n\nexport const fetchSongsByGenre = (genre) => (dispatch) => {\n  return SongApiUtil.fetchSongsByGenre(genre)\n    .then((songs) => { dispatch(receiveSongs(songs)) })\n};\n\nexport const searchSongs = (search) => (dispatch) => {\n  return SongApiUtil.searchSongs(search)\n    .then((songs) => { dispatch(receiveSongs(songs)) })\n};\n\nexport const toggleLike = likeData => dispatch => {\n  return SongApiUtil.toggleLike(likeData).then((likeData) => { dispatch(changeLike(likeData))});\n}\n\n// export const toggleMultipleLikes = likeData => dispatch => {\n//   return SongApiUtil.toggleMultipleLikes(likeData).then((likeData) => {dispatch(changeMultipleLikes(likeData))})\n// }"]},"metadata":{},"sourceType":"module"}