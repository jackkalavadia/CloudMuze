{"ast":null,"code":"import AlbumShow from \"./album_show\";\nimport { connect } from 'react-redux';\nimport { fetchAlbum, toggleAlbumLike } from '../../actions/album_actions';\nimport { playTrack, addTrack, playAllTracks } from '../../actions/player_queue_actions';\nimport { fetchUser } from '../../actions/user_actions';\nimport { addSongToPlaylist } from '../../actions/playlist_actions';\nimport { openModal, closeModal } from \"../../actions/modal_actions\";\n\nconst msp = state => {\n  return {\n    album: state.entities.albums,\n    currentUserId: state.session.user.id,\n    currentUser: state.entities.users[state.session.user.id]\n  };\n};\n\nconst mdp = () => dispatch => {\n  return {\n    fetchAlbum: id => dispatch(fetchAlbum(id)),\n    playTrack: song => dispatch(playTrack(song)),\n    addTrack: song => dispatch(addTrack(song)),\n    playAllTracks: songs => dispatch(playAllTracks(songs)),\n    openModal: (modal, songId) => dispatch(openModal(modal, songId)),\n    toggleAlbumLike: likeData => dispatch(toggleAlbumLike(likeData)),\n    fetchUser: id => dispatch(fetchUser(id)),\n    addSongToPlaylist: (songId, playlistId) => dispatch(addSongToPlaylist(songId, playlistId)),\n    closeModal: () => dispatch(closeModal())\n  };\n};\n\nexport default connect(msp, mdp)(AlbumShow);","map":{"version":3,"sources":["/Users/spartan/Downloads/sleepify/frontend/src/components/show/album_show_container.js"],"names":["AlbumShow","connect","fetchAlbum","toggleAlbumLike","playTrack","addTrack","playAllTracks","fetchUser","addSongToPlaylist","openModal","closeModal","msp","state","album","entities","albums","currentUserId","session","user","id","currentUser","users","mdp","dispatch","song","songs","modal","songId","likeData","playlistId"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,6BAA5C;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,aAA9B,QAAmD,oCAAnD;AACA,SAAQC,SAAR,QAAwB,4BAAxB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,6BAAtC;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,QAAN,CAAeC,MADjB;AAELC,IAAAA,aAAa,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBC,EAF7B;AAGLC,IAAAA,WAAW,EAAER,KAAK,CAACE,QAAN,CAAeO,KAAf,CAAqBT,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBC,EAAxC;AAHR,GAAP;AAKD,CAND;;AAQA,MAAMG,GAAG,GAAG,MAAMC,QAAQ,IAAI;AAC5B,SAAO;AACLrB,IAAAA,UAAU,EAAGiB,EAAD,IAAQI,QAAQ,CAACrB,UAAU,CAACiB,EAAD,CAAX,CADvB;AAELf,IAAAA,SAAS,EAAGoB,IAAD,IAAUD,QAAQ,CAACnB,SAAS,CAACoB,IAAD,CAAV,CAFxB;AAGLnB,IAAAA,QAAQ,EAAGmB,IAAD,IAAUD,QAAQ,CAAClB,QAAQ,CAACmB,IAAD,CAAT,CAHvB;AAILlB,IAAAA,aAAa,EAAGmB,KAAD,IAAWF,QAAQ,CAACjB,aAAa,CAACmB,KAAD,CAAd,CAJ7B;AAKLhB,IAAAA,SAAS,EAAE,CAACiB,KAAD,EAAQC,MAAR,KAAmBJ,QAAQ,CAACd,SAAS,CAACiB,KAAD,EAAQC,MAAR,CAAV,CALjC;AAMLxB,IAAAA,eAAe,EAAGyB,QAAD,IAAcL,QAAQ,CAACpB,eAAe,CAACyB,QAAD,CAAhB,CANlC;AAOLrB,IAAAA,SAAS,EAAGY,EAAD,IAAQI,QAAQ,CAAChB,SAAS,CAACY,EAAD,CAAV,CAPtB;AAQLX,IAAAA,iBAAiB,EAAE,CAACmB,MAAD,EAASE,UAAT,KAAwBN,QAAQ,CAACf,iBAAiB,CAACmB,MAAD,EAASE,UAAT,CAAlB,CAR9C;AASLnB,IAAAA,UAAU,EAAE,MAAMa,QAAQ,CAACb,UAAU,EAAX;AATrB,GAAP;AAWD,CAZD;;AAcA,eAAeT,OAAO,CACpBU,GADoB,EAEpBW,GAFoB,CAAP,CAGbtB,SAHa,CAAf","sourcesContent":["import AlbumShow from \"./album_show\";\nimport { connect } from 'react-redux';\nimport { fetchAlbum, toggleAlbumLike } from '../../actions/album_actions';\nimport { playTrack, addTrack, playAllTracks } from '../../actions/player_queue_actions';\nimport {fetchUser} from '../../actions/user_actions'\nimport { addSongToPlaylist } from '../../actions/playlist_actions';\nimport { openModal, closeModal } from \"../../actions/modal_actions\";\n\nconst msp = (state) => {\n  return { \n    album: state.entities.albums, \n    currentUserId: state.session.user.id,\n    currentUser: state.entities.users[state.session.user.id],\n  };\n};\n\nconst mdp = () => dispatch => {\n  return {\n    fetchAlbum: (id) => dispatch(fetchAlbum(id)),\n    playTrack: (song) => dispatch(playTrack(song)),\n    addTrack: (song) => dispatch(addTrack(song)),\n    playAllTracks: (songs) => dispatch(playAllTracks(songs)),\n    openModal: (modal, songId) => dispatch(openModal(modal, songId)),\n    toggleAlbumLike: (likeData) => dispatch(toggleAlbumLike(likeData)),\n    fetchUser: (id) => dispatch(fetchUser(id)),\n    addSongToPlaylist: (songId, playlistId) => dispatch(addSongToPlaylist(songId, playlistId)),\n    closeModal: () => dispatch(closeModal())\n  };\n};\n\nexport default connect(\n  msp,\n  mdp\n)(AlbumShow);"]},"metadata":{},"sourceType":"module"}