{"ast":null,"code":"var _jsxFileName = \"/Users/spartan/Downloads/sleepify/frontend/src/util/route_util.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\"; //We'll use our custom Protected component to ensure users can only access certain information if they are logged in.\n//If the user visits a login or signup page, the Auth component will redirect them to tweets page if they are already logged in.\n// Passed in from parent component or from mapStateToProps\n\nconst Auth = ({\n  component: Component,\n  path,\n  loggedIn,\n  exact\n}) => /*#__PURE__*/React.createElement(Route, {\n  path: path,\n  exact: exact,\n  render: props => !loggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  })) :\n  /*#__PURE__*/\n  // Redirect to the home page if the user is authenticated\n  React.createElement(Redirect, {\n    to: \"/open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }) //---------------------------------------------has not been created yet\n  ,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n});\n\nconst Protected = ({\n  component: Component,\n  loggedIn,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => loggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })) :\n  /*#__PURE__*/\n  // Redirect to the login page if the user is already authenticated\n  React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n})); // Use the isAuthenitcated slice of state to determine whether a user is logged in\n\n\nconst mapStateToProps = state => ({\n  loggedIn: state.session.isAuthenticated\n});\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));","map":{"version":3,"sources":["/Users/spartan/Downloads/sleepify/frontend/src/util/route_util.js"],"names":["React","connect","Route","Redirect","withRouter","Auth","component","Component","path","loggedIn","exact","props","Protected","rest","mapStateToProps","state","session","isAuthenticated","AuthRoute","ProtectedRoute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C,C,CACA;AACA;AAEA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,QAA9B;AAAwCC,EAAAA;AAAxC,CAAD,kBACX,oBAAC,KAAD;AACE,EAAA,IAAI,EAAEF,IADR;AAEE,EAAA,KAAK,EAAEE,KAFT;AAGE,EAAA,MAAM,EAAEC,KAAK,IACX,CAACF,QAAD,gBACE,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAAA;AAGE;AACA,sBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAI2B;AAR/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAeA,MAAMC,SAAS,GAAG,CAAC;AAAEN,EAAAA,SAAS,EAAEC,SAAb;AAAwBE,EAAAA,QAAxB;AAAkC,KAAGI;AAArC,CAAD,kBAChB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEF,KAAK,IACXF,QAAQ,gBACN,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADM;AAAA;AAGN;AACA,sBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,C,CAcA;;;AAEA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAAEN,EAAAA,QAAQ,EAAEM,KAAK,CAACC,OAAN,CAAcC;AAA1B,CAAL,CAA7B;;AAEA,OAAO,MAAMC,SAAS,GAAGd,UAAU,CAACH,OAAO,CAACa,eAAD,CAAP,CAAyBT,IAAzB,CAAD,CAA5B;AAEP,OAAO,MAAMc,cAAc,GAAGf,UAAU,CAACH,OAAO,CAACa,eAAD,CAAP,CAAyBF,SAAzB,CAAD,CAAjC","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\n//We'll use our custom Protected component to ensure users can only access certain information if they are logged in.\n//If the user visits a login or signup page, the Auth component will redirect them to tweets page if they are already logged in.\n\n// Passed in from parent component or from mapStateToProps\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route\n    path={path}\n    exact={exact}\n    render={props =>\n      !loggedIn ? (\n        <Component {...props} />\n      ) : (\n        // Redirect to the home page if the user is authenticated\n        <Redirect to=\"/open\" />  //---------------------------------------------has not been created yet\n      )\n    }\n  />\n);\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      loggedIn ? (\n        <Component {...props} />\n      ) : (\n        // Redirect to the login page if the user is already authenticated\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\n// Use the isAuthenitcated slice of state to determine whether a user is logged in\n\nconst mapStateToProps = state => ({ loggedIn: state.session.isAuthenticated });\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));\n"]},"metadata":{},"sourceType":"module"}